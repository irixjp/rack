---
- name: set fact for later use
  hosts: frontend[0]
  sudo: yes
  tasks:
     # you can't use delegate_to and register at simultaneously
     # delegate_to is used for simple "fire and forget" command.
    - name: determine tenant id of "service"
      shell: >
        /usr/bin/keystone 
        --os-endpoint "{{ keystone_admin_url }}" 
        --os-token "{{ admin_token }}"
        tenant-get {{service_tenant}}  | grep "id " | awk {'print $4'}      
      register: nova_admin_tenant_id
    
    - name: set_fact nova_admin_tenant_id for later use
      action: set_fact
      args: 
        admin_tenantID: "{{ nova_admin_tenant_id.stdout }}"
        
- name: OpenStack Networking (Agent)
  hosts: compute_backend
  sudo: yes

  tasks:
    - name: ensure neutron packages are installed
      yum: name={{ item }} state=latest
      with_items:
        - openstack-neutron-ml2
        - openstack-neutron-openvswitch
        - openstack-neutron-linuxbridge
        - openstack-selinux
      notify:
        - restart neutron-agents(COMPUTE)
        
        
    - name: ensure neutron configuration files are copied
      template: 
        src: "{{ item.src }}"
        dest: "{{ item.dest }}"
        owner: root
        group: neutron
        mode: 0640
      with_items: 
        - { src: templates/etc/neutron/neutron.conf, dest: /etc/neutron/neutron.conf}
        - { src: templates/etc/neutron/plugins/ml2/ml2_conf_linuxbridge_VLAN.ini, dest: /etc/neutron/plugins/ml2/ml2_conf.ini}
      notify:
        - restart neutron-agents(COMPUTE)

    - name: ensure symlink to ml2 plugin is created.
      file: src=/etc/neutron/plugins/ml2/ml2_conf.ini
            path=/etc/neutron/plugin.ini
            state=link     
        
    - name: ensure neutron-linuxbridge-agent reads symlink
      copy:
        src: templates/etc/init.d/neutron-linuxbridge-agent
        dest: /etc/init.d/neutron-linuxbridge-agent
        owner: root
        group: root
        mode: 0755

    - name: ensure neutron-linuxbridge-agent automatically boots after reboot
      service: name=neutron-linuxbridge-agent state=started enabled=yes 
        
      
        
  handlers:
    - name: restart neutron-agents(COMPUTE)
      service: name={{ item }} state=restarted
      with_items: 
        - neutron-linuxbridge-agent

        
        